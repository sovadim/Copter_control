// Generated by gencpp from file clever/GetTelemetry.msg
// DO NOT EDIT!


#ifndef CLEVER_MESSAGE_GETTELEMETRY_H
#define CLEVER_MESSAGE_GETTELEMETRY_H

#include <ros/service_traits.h>


#include <clever/GetTelemetryRequest.h>
#include <clever/GetTelemetryResponse.h>


namespace clever
{

struct GetTelemetry
{

typedef GetTelemetryRequest Request;
typedef GetTelemetryResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GetTelemetry
} // namespace clever


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::clever::GetTelemetry > {
  static const char* value()
  {
    return "3f1c3a9f95e1194fe8ebc671ce98ef91";
  }

  static const char* value(const ::clever::GetTelemetry&) { return value(); }
};

template<>
struct DataType< ::clever::GetTelemetry > {
  static const char* value()
  {
    return "clever/GetTelemetry";
  }

  static const char* value(const ::clever::GetTelemetry&) { return value(); }
};


// service_traits::MD5Sum< ::clever::GetTelemetryRequest> should match 
// service_traits::MD5Sum< ::clever::GetTelemetry > 
template<>
struct MD5Sum< ::clever::GetTelemetryRequest>
{
  static const char* value()
  {
    return MD5Sum< ::clever::GetTelemetry >::value();
  }
  static const char* value(const ::clever::GetTelemetryRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::clever::GetTelemetryRequest> should match 
// service_traits::DataType< ::clever::GetTelemetry > 
template<>
struct DataType< ::clever::GetTelemetryRequest>
{
  static const char* value()
  {
    return DataType< ::clever::GetTelemetry >::value();
  }
  static const char* value(const ::clever::GetTelemetryRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::clever::GetTelemetryResponse> should match 
// service_traits::MD5Sum< ::clever::GetTelemetry > 
template<>
struct MD5Sum< ::clever::GetTelemetryResponse>
{
  static const char* value()
  {
    return MD5Sum< ::clever::GetTelemetry >::value();
  }
  static const char* value(const ::clever::GetTelemetryResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::clever::GetTelemetryResponse> should match 
// service_traits::DataType< ::clever::GetTelemetry > 
template<>
struct DataType< ::clever::GetTelemetryResponse>
{
  static const char* value()
  {
    return DataType< ::clever::GetTelemetry >::value();
  }
  static const char* value(const ::clever::GetTelemetryResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // CLEVER_MESSAGE_GETTELEMETRY_H
